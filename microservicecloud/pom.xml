<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.trd.springcloud</groupId>
    <artifactId>microservicecloud</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>

    <!--工具包和源码的版本管理-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <junit.version>4.12</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <spring-boot.version>1.5.19.RELEASE</spring-boot.version>
        <spring-cloud.version>Dalston.SR1</spring-cloud.version>
        <logback.version>1.2.3</logback.version>
        <lombok.version>1.18.6</lombok.version>
        <mybatis-spring-boot-starter.version>1.3.0</mybatis-spring-boot-starter.version>
        <!--一定要注意MySQL-Connector和Druid的版本问题，
                否则容易出现MySqlValidConnectionChecker错误-->
        <druid.version>1.0.6</druid.version>
        <mysql-connector.version>8.0.16</mysql-connector.version>
    </properties>

    <!--对子模块依赖的版本管理，不负责引进-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <modules>
        <!--公共模块-->
        <module>../microservicecloud-api</module>
        <!-- 3个服务的提供者-->
        <module>../microservicecloud-provider-dept-8001</module>
        <module>../microservicecloud-provider-dept-8002</module>
        <module>../microservicecloud-provider-dept-8003</module>
        <!-- RestTemplate模式，服务的消费-->
        <module>../microservicecloud-consumer-dept-80</module>
        <!--3个eureka server,集群-->
        <module>../microservicecloud-eureka-7001</module>
        <module>../microservicecloud-eureka-7002</module>
        <module>../microservicecloud-eureka-7003</module>
        <!--Rest接口，feign的服务消费模块-->
        <module>../microservicecloud-consumer-dept-feign-81</module>
        <!--服务熔断-->
        <module>../microservicecloud-provider-dept-hystrix-8001</module>
        <!--服务熔断的图形化监控指示板-->
        <module>../microservicecloud-consumer-hystrix-dashboard-9001</module>
        <!--路由-->
        <module>../microservicecloud-zuul-gateway-9527</module>
        <!--config的server-->
        <module>../microservicecloud-config-server-3344</module>
        <!--config的client端测试-->
        <module>../microservicecloud-config-client-820x</module>
        <!--config的实战-->
        <module>../microservicecloud-config-eureka-server-700x</module>
        <module>../microservicecloud-config-provider-dept-800x</module>
    </modules>

    <build>
        <!--finalName 父工程名称-->
        <finalName>microservicecloud</finalName>
        <resources>
            <resource>
                <!--开启maven工程的主resource的所有文件过滤-->
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>

        </resources>
        <!--增加插件-->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <!--配置插件解析-->
                <configuration>
                    <delimiters>
                        <!--占位符的替换规则设置，
                            以$符为界限,取过滤的resources中以$*$之间的信息-->
                        <delimiter>$</delimiter>
                    </delimiters>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>